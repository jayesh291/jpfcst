install.packages("fpc")
rm(list = ls())
setwd("C:/jp/git/jpfcst/jpfcst")
library(reshape)
library(corrplot)
library(data.table)
library(psych)
library(plotrix)
library(fpc)
source("C:/jp/git/jpfcst/jpfcst/functions.R")
source("C:/jp/git/jpfcst/jpfcst/dataset.R")
source("C:/jp/git/jpfcst/jpfcst/preprocess.R")
View(sorteddata)
View(getSlidingWindows)
View(plotmeters)
mtr.dtscol <- cast(mtr.f, id ~ ts, value = "val")
write.csv(mtr.dtscol, file = "./outs/transposed.csv")
mtr.mtrcol <- t(mtr.dtscol)
mtr_mtrcol_scale <- scale(mtr.mtrcol)
mtr_dtscol_scale <- t(mtr_mtrcol_scale)
dists <- dist(mtr_dtscol_scale, method =  "euclidian")
write.csv(as.matrix(dists), "./outs/dists.csv")
str(dists)
par(bg="grey40");                                                   # Set background to gray.
plot(dists);                                                           # Plot original database.
plot(dists);                                                           # Plot original database.
d <- dbscan(dists, 10, showplot = 2);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
d <- dbscan(dists, eps = 10, showplot = 2);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
plot(dists);                                                           # Plot original database.
d <- dbscan(dists, eps = 5, showplot = 2);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
plot(dists);                                                           # Plot original database.
d <- dbscan(dists, eps = 5, showplot = 2);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d <- dbscan(dists, eps = 2, showplot = 2);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d <- dbscan(dists, eps = 2, showplot = 2);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
d <- dbscan(dists, eps = 20, showplot = 2);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
d <- dbscan(dists, eps = 4, showplot = 2);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
d <- dbscan(dists, eps = 4, MinPts = 1, showplot = 2);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
d <- dbscan(dists, eps = 4, MinPts = 3, showplot = 2);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
d;                                                                 # Shows DBSCAN result.
plot(d)
d <- dbscan(dists, eps = 4, MinPts = 3, showplot = 2);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d$cluster
plot(dists[d$cluster %in% 1:3,])
d <- dbscan(dists, eps = 4, MinPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
install.packages("dbscan")
rm(list = ls())
setwd("C:/jp/git/jpfcst/jpfcst")
library(reshape)
library(corrplot)
library(data.table)
library(psych)
library(plotrix)
library(dbscan)
source("C:/jp/git/jpfcst/jpfcst/functions.R")
source("C:/jp/git/jpfcst/jpfcst/dataset.R")
source("C:/jp/git/jpfcst/jpfcst/preprocess.R")
source("C:/jp/git/jpfcst/jpfcst/meterdata.R")
source("C:/jp/git/jpfcst/jpfcst/meterdata.R")
d <- dbscan(dists, eps = 4, minPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
par(bg="grey10");                                                   # Set background to gray.
plot(dists);                                                           # Plot original database.
par(bg="grey10");                                                   # Set background to gray.
plot(dists);                                                           # Plot original database.
par(bg="grey90");                                                   # Set background to gray.
plot(dists);                                                           # Plot original database.
dists <- dist(mtr_dtscol_scale, method =  "euclidian", upper = F, diag = F)
write.csv(as.matrix(dists), "./outs/dists.csv")
par(bg="grey90");                                                   # Set background to gray.
plot(dists);                                                           # Plot original database.
dev.off()
par(bg="grey90");                                                   # Set background to gray.
plot(dists);                                                           # Plot original database.
dev.off()
par(bg="grey90");                                                   # Set background to gray.
plot(dists);                                                           # Plot original database.
dev.off()
d <- dbscan(dists, eps = 4, minPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
d <- dbscan(dists, eps = 5, minPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
d <- dbscan(dists, eps = 4.5, minPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
d <- dbscan(dists, eps = 3.9, minPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
d <- dbscan(dists, eps = 2, minPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
d <- dbscan(dists, eps = 5, minPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
hc <- hclust(dists)
pdf("./outs/dendogram.pdf")
plot(hc, cex = 0.2, hang = -1)
rhc <- rect.hclust(hc, k = 15, border = 2)
dev.off()
print.dist(dists)
print(dists)
d;                                                                 # Shows DBSCAN result.
d <- dbscan(dists, eps = 5, minPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
dev.off()
str(d)
d$cluster
d$eps
d$minPts
rm(list = ls())
setwd("C:/jp/git/jpfcst/jpfcst")
library(reshape)
library(corrplot)
library(data.table)
library(psych)
library(plotrix)
library(fpc)
source("C:/jp/git/jpfcst/jpfcst/functions.R")
source("C:/jp/git/jpfcst/jpfcst/dataset.R")
source("C:/jp/git/jpfcst/jpfcst/preprocess.R")
meterdata <-
read.csv(
"./input/dmd_data_daily_170112.txt",
sep = "\t",
header = FALSE,
col.names = c("id", "ts", "val")
)
source("C:/jp/git/jpfcst/jpfcst/preprocess.R")
mtr.dtscol <- cast(mtr.f, id ~ ts, value = "val")
write.csv(mtr.dtscol, file = "./outs/transposed.csv")
mtr.mtrcol <- t(mtr.dtscol)
mtr_mtrcol_scale <- scale(mtr.mtrcol)
mtr_dtscol_scale <- t(mtr_mtrcol_scale)
dists <- dist(mtr_dtscol_scale, method =  "euclidian", upper = F, diag = F)
write.csv(as.matrix(dists), "./outs/dists.csv")
par(bg="grey90");                                                   # Set background to gray.
plot(dists);                                                           # Plot original database.
dev.off()
d <- dbscan(dists, eps = 5, MinPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d <- fpc.dbscan(dists, eps = 5, MinPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d <- fpc::dbscan(dists, eps = 5, MinPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
dev.off()
d <- fpc::dbscan(dists, eps = 3, MinPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
dev.off()
d <- fpc::dbscan(dists, eps = 3, MinPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
dev.off()
dev.off()
d <- fpc::dbscan(dists, eps = 4, MinPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
dev.off()
d <- fpc::dbscan(dists, eps = 5, MinPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
d;                                                                 # Shows DBSCAN result.
db <- fpc::dbscan(dists, eps = 5, MinPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
db;                                                                 # Shows DBSCAN result.
plot(db, df, main = "DBSCAN", frame = FALSE)
dev.off()
plot(db, df, main = "DBSCAN", frame = FALSE)
plot(db, dists, main = "DBSCAN", frame = FALSE)
data("multishapes", package = "factoextra")
install.packages( "factoextra")
data("multishapes", package = "factoextra")
df <- multishapes[, 1:2]
library("fpc")
set.seed(123)
db <- fpc::dbscan(df, eps = 0.15, MinPts = 5)
db
plot(db, df, main = "DBSCAN", frame = FALSE)
db
df
multishapes
db <- fpc::dbscan(dists[,1:2], eps = 5, MinPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
str(dists)
db <- fpc::dbscan(dists[,"0071CFB0-D92D-4035-ABA6-1AB961E4F573","016499E8-C930-4A11-9DF1-52704BE9575C"], eps = 5, MinPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
db <- fpc::dbscan(dists, eps = 5, MinPts = 3, showplot = 1);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
db;                                                                 # Shows DBSCAN result.
str
str(db)
dev.off()
set.seed(123)
db <- fpc::dbscan(dists, eps = 5, MinPts = 3, showplot = 2);                                    # Calls DBSCAN routine (eps = 10 and MinPts is set to its default, which is 5).
db;                                                                 # Shows DBSCAN result.
